<?php

/*
Plugin Name: KMI user control
Plugin URI: 
Description: Plugin to manage site users.
Author: KMI
Version: 1.0
Author URI: 
*/

if(!defined('ABSPATH')) exit; // Exit if accessed directly

require_once 'pluggable-overrides.php';
require_once 'user_control.php';
require_once 'subscription-paypal.php';
require_once 'suggestion.php';

register_activation_hook(__FILE__, 'kmi_activate_user_control');

function kmi_activate_user_control()
{
    error_log('KMI user control activated.');
}

register_deactivation_hook(__FILE__, 'kmi_deactivate_user_control');

function kmi_deactivate_user_control()
{
    error_log('KMI user control deactivated.');
}

// add the styles to all tags generated by this plugin
add_filter('the_posts', 'add_user_pages_styles'); // the_posts gets triggered before wp_head

function add_user_pages_styles($posts)
{
    if(empty($posts)) return $posts;
        
    $user_shortcodes = array(
        '[kmi_login_form]',
        '[kmi_registration_form]',
        '[kmi_reset_password_form]',
        '[kmi_change_password_form]',
        '[kmi_profile_form]',
        '[kmi_subscription_form]',
        '[kmi_IPN_response_hdlr]',
        '[kmi_suggestion_form]'
    );
        
    // use this flag to see if styles and scripts need to be enqueued
    $shortcode_found = false;
    
    foreach($posts as $post)
    {
        foreach($user_shortcodes as $shortcode)
        {
            if(stripos($post->post_content, $shortcode) !== false)
            {
                $shortcode_found = true;
                break;
            }
        }
            
        if($shortcode_found)
        {
            // register
            wp_register_style('kmi_usercontrol_style', plugins_url('/css/style.css', __FILE__), array(), '1.0', 'all');
            // enqueue
            wp_enqueue_style('kmi_usercontrol_style');
            break;
        }
    }
    
    return $posts;
}